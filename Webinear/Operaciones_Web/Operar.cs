///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Webinear.Operaciones_Web
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Operar recording.
    /// </summary>
    [TestModule("d5c95b0b-df9b-4fd4-b1f8-1fe295cdef11", ModuleType.Recording, 1)]
    public partial class Operar : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Webinear.WebinearRepository repository.
        /// </summary>
        public static global::Webinear.WebinearRepository repo = global::Webinear.WebinearRepository.Instance;

        static Operar instance = new Operar();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Operar()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Operar Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.OdBasePageBelowHeaderOdBasePageBelo.Nuevo' at Center.", repo.ApplicationUnderTest.OdBasePageBelowHeaderOdBasePageBelo.NuevoInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.OdBasePageBelowHeaderOdBasePageBelo.Nuevo.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Carpeta' at Center.", repo.ApplicationUnderTest.CarpetaInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.Carpeta.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Text' at CenterLeft.", repo.ApplicationUnderTest.TextInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.Text.Click(Location.CenterLeft);
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Prueba' with focus on 'ApplicationUnderTest.Text'.", repo.ApplicationUnderTest.TextInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.Text.PressKeys("Prueba");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Crear' at Center.", repo.ApplicationUnderTest.CrearInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.Crear.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.OdBasePageBelowHeaderOdBasePageBelo.Prueba'.", repo.ApplicationUnderTest.OdBasePageBelowHeaderOdBasePageBelo.PruebaInfo, new RecordItemIndex(5));
            Validate.Exists(repo.ApplicationUnderTest.OdBasePageBelowHeaderOdBasePageBelo.PruebaInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.OdBasePageBelowHeaderOdBasePageBelo.Prueba' at Center.", repo.ApplicationUnderTest.OdBasePageBelowHeaderOdBasePageBelo.PruebaInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.OdBasePageBelowHeaderOdBasePageBelo.Prueba.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.OdBasePageBelowHeaderOdBasePageBelo.Prueba1'.", repo.ApplicationUnderTest.OdBasePageBelowHeaderOdBasePageBelo.Prueba1Info, new RecordItemIndex(7));
            Validate.Exists(repo.ApplicationUnderTest.OdBasePageBelowHeaderOdBasePageBelo.Prueba1Info);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.OdBasePageBelowHeaderOdBasePageBelo.Cargar' at Center.", repo.ApplicationUnderTest.OdBasePageBelowHeaderOdBasePageBelo.CargarInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.OdBasePageBelowHeaderOdBasePageBelo.Cargar.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Archivos' at Center.", repo.ApplicationUnderTest.ArchivosInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.Archivos.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Abrir.Escritorio' at Center.", repo.Abrir.EscritorioInfo, new RecordItemIndex(10));
            repo.Abrir.Escritorio.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'C:\\TEMP{Return}' with focus on 'Abrir'.", repo.Abrir.SelfInfo, new RecordItemIndex(11));
            repo.Abrir.Self.EnsureVisible();
            Keyboard.Press("C:\\TEMP{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Abrir.Text1148' at CenterLeft.", repo.Abrir.Text1148Info, new RecordItemIndex(12));
            repo.Abrir.Text1148.Click(Location.CenterLeft);
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'prueba.txt' with focus on 'Abrir.Text1148'.", repo.Abrir.Text1148Info, new RecordItemIndex(13));
            repo.Abrir.Text1148.PressKeys("prueba.txt");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Abrir.ButtonAbrir' at Center.", repo.Abrir.ButtonAbrirInfo, new RecordItemIndex(14));
            repo.Abrir.ButtonAbrir.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.OdBasePageBelowHeaderOdBasePageBelo.PruebaTxt'.", repo.ApplicationUnderTest.OdBasePageBelowHeaderOdBasePageBelo.PruebaTxtInfo, new RecordItemIndex(15));
            Validate.Exists(repo.ApplicationUnderTest.OdBasePageBelowHeaderOdBasePageBelo.PruebaTxtInfo);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
