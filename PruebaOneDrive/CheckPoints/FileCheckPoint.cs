///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PruebaOneDrive.CheckPoints
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The FileCheckPoint recording.
    /// </summary>
    [TestModule("2b565c3c-4eff-4011-b7bf-3534149c7c17", ModuleType.Recording, 1)]
    public partial class FileCheckPoint : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PruebaOneDrive.PruebaOneDriveRepository repository.
        /// </summary>
        public static global::PruebaOneDrive.PruebaOneDriveRepository repo = global::PruebaOneDrive.PruebaOneDriveRepository.Instance;

        static FileCheckPoint instance = new FileCheckPoint();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public FileCheckPoint()
        {
            P_CHKFILE = "NULL";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static FileCheckPoint Instance
        {
            get { return instance; }
        }

#region Variables

        string _P_CHKFILE;

        /// <summary>
        /// Gets or sets the value of variable P_CHKFILE.
        /// </summary>
        [TestVariable("ec43fd09-5459-447d-9b01-5ff4d3a98d70")]
        public string P_CHKFILE
        {
            get { return _P_CHKFILE; }
            set { _P_CHKFILE = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SignInMicrosoftOneDrive.AppRoot.CarpetaCreada' at Center.", repo.SignInMicrosoftOneDrive.AppRoot.CarpetaCreadaInfo, new RecordItemIndex(0));
            repo.SignInMicrosoftOneDrive.AppRoot.CarpetaCreada.Click();
            Delay.Milliseconds(200);
            
            try {
                Report.Log(ReportLevel.Info, "Get Value", "(Optional Action)\r\nGetting attribute 'InnerText' from item 'SignInMicrosoftOneDriver_COF.Copy_of_PruebaWebTxt' and assigning its value to variable 'P_CHKFILE'.", repo.SignInMicrosoftOneDriver_COF.Copy_of_PruebaWebTxtInfo, new RecordItemIndex(1));
                P_CHKFILE = repo.SignInMicrosoftOneDriver_COF.Copy_of_PruebaWebTxt.Element.GetAttributeValueText("InnerText");
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(1)); }
            
            Report.Log(ReportLevel.Info, "User", P_CHKFILE, new RecordItemIndex(2));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
