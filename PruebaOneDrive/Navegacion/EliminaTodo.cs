///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PruebaOneDrive.Navegacion
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EliminaTodo recording.
    /// </summary>
    [TestModule("ad99971d-4e04-4b85-b2a3-d6db03e4b972", ModuleType.Recording, 1)]
    public partial class EliminaTodo : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::PruebaOneDrive.PruebaOneDriveRepository repository.
        /// </summary>
        public static global::PruebaOneDrive.PruebaOneDriveRepository repo = global::PruebaOneDrive.PruebaOneDriveRepository.Instance;

        static EliminaTodo instance = new EliminaTodo();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EliminaTodo()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EliminaTodo Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SignInMicrosoftOneDrive.AppRoot.MisArchivos' at Center.", repo.SignInMicrosoftOneDrive.AppRoot.MisArchivosInfo, new RecordItemIndex(0));
            repo.SignInMicrosoftOneDrive.AppRoot.MisArchivos.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'SignInMicrosoftOneDrive.AlmacenPersonal'", repo.SignInMicrosoftOneDrive.AlmacenPersonalInfo, new ActionTimeout(30000), new RecordItemIndex(1));
            repo.SignInMicrosoftOneDrive.AlmacenPersonalInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SignInMicrosoftOneDrive.AppRoot.rdo_SelectFolder' at Center.", repo.SignInMicrosoftOneDrive.AppRoot.rdo_SelectFolderInfo, new RecordItemIndex(2));
            repo.SignInMicrosoftOneDrive.AppRoot.rdo_SelectFolder.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'SignInMicrosoftOneDrive.AppRoot.Eliminar'", repo.SignInMicrosoftOneDrive.AppRoot.EliminarInfo, new ActionTimeout(30000), new RecordItemIndex(3));
            repo.SignInMicrosoftOneDrive.AppRoot.EliminarInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SignInMicrosoftOneDrive.AppRoot.Eliminar' at Center.", repo.SignInMicrosoftOneDrive.AppRoot.EliminarInfo, new RecordItemIndex(4));
            repo.SignInMicrosoftOneDrive.AppRoot.Eliminar.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to not exist. Associated repository item: 'SignInMicrosoftOneDrive.AppRoot.CarpetaCreada'", repo.SignInMicrosoftOneDrive.AppRoot.CarpetaCreadaInfo, new ActionTimeout(30000), new RecordItemIndex(5));
            repo.SignInMicrosoftOneDrive.AppRoot.CarpetaCreadaInfo.WaitForNotExists(30000);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(6));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SignInMicrosoftOneDrive.AppRoot.btn_PapeleraDeReciclaje' at Center.", repo.SignInMicrosoftOneDrive.AppRoot.btn_PapeleraDeReciclajeInfo, new RecordItemIndex(7));
            repo.SignInMicrosoftOneDrive.AppRoot.btn_PapeleraDeReciclaje.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "User", "", new RecordItemIndex(8));
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'SignInMicrosoftOneDrive.AppRoot.lbl_PapeleraDeReciclaje'", repo.SignInMicrosoftOneDrive.AppRoot.lbl_PapeleraDeReciclajeInfo, new ActionTimeout(30000), new RecordItemIndex(9));
            repo.SignInMicrosoftOneDrive.AppRoot.lbl_PapeleraDeReciclajeInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SignInMicrosoftOneDrive.AppRoot.VaciarPapeleraDeReciclaje' at Center.", repo.SignInMicrosoftOneDrive.AppRoot.VaciarPapeleraDeReciclajeInfo, new RecordItemIndex(10));
            repo.SignInMicrosoftOneDrive.AppRoot.VaciarPapeleraDeReciclaje.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'SignInMicrosoftOneDrive.lbl_VaciarPapelera'", repo.SignInMicrosoftOneDrive.lbl_VaciarPapeleraInfo, new ActionTimeout(30000), new RecordItemIndex(11));
            repo.SignInMicrosoftOneDrive.lbl_VaciarPapeleraInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SignInMicrosoftOneDrive.AppRoot.SpanTagSi' at Center.", repo.SignInMicrosoftOneDrive.AppRoot.SpanTagSiInfo, new RecordItemIndex(12));
            repo.SignInMicrosoftOneDrive.AppRoot.SpanTagSi.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'SignInMicrosoftOneDrive.AppRoot.LaPapeleraDeReciclajeEstaVacia'", repo.SignInMicrosoftOneDrive.AppRoot.LaPapeleraDeReciclajeEstaVaciaInfo, new ActionTimeout(30000), new RecordItemIndex(13));
            repo.SignInMicrosoftOneDrive.AppRoot.LaPapeleraDeReciclajeEstaVaciaInfo.WaitForExists(30000);
            
            Report.Screenshot(ReportLevel.Info, "User", "", null, false, new RecordItemIndex(14));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
